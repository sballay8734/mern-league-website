// TODO ************************************************************************

NOW ---------------------------------------
1. If commissioner has rejected, you shouldn't be able to vote
1. Each proposal will have to have a "Vetoed by commissioner field
1. Add "Rejected By KJD" Option to status
1. Style Vote Proposal Modal
2. Add ability for Commish to veto
3. To prevent spamming, only allow one 2 proposal submissions per day (they can delete their old proposals)***
4. Are you sure you're ready to submit proposal?
5. Style viewProposalModal & Propose proposal modal
7. Modals should fade in
9. All picks should have a voided option incase you fuck it up (these won't be counted towards pick stats)
10. Create devBranch domain for beta testers aka Donnie
11. PROPER HTML (main, header, article, etc...)
12. Record if you had _____'s schedule

LATER -------------------------------------

AT END ------------------------------------
1. Update firebase storage rules to be MORE restrictive (see mern-estate)
2. Password Reset Capability
3. Form inputs should be outlined red if incorrect
6. add note to install cors and cors types to Notion
7. Try and get deployment to work without pushing dist folder (render should auto generate a dist folder during build)
8. Redo media queries for home screen
9. Need to fix most error codes (400, 401, etc)
10. If Donnie somehow approves or vetos by accident and people can't vote, you'll just have to go into the DB and set commishVeto to null

BUGS --------------------------------------
3. Decide if you want to accommodate surface/iPad pro (weird breakpoints)
4. Remove "Hover here for navigation" from every page but homepage
8. Joey bug (KANE was set as his last initial somehow)
7. For some reason, the first time you press sign in with google (on mobile) it doesn't work

********************************************************************************

Needed Themes:
- Liverpool
- Eagles (current)
- Eagles (kelly)
- Phillies
- Union

- Chelsea (Joke)
- Giants (Joke)
- Man City (Joke)

- DATABASE STRUCTURE
// Games collection
{
  "_id": "game12345",
  "year": 2023,
  "week": 5,
  "team1": {
    "name": "Bears",
    "spread": "+3.5"
  },
  "team2": {
    "name": "Lions",
    "spread": "-3.5"
  },
  "result": null
  "statsComputed": false
}


// Picks collection
{
  "_id": "pick98765",
  "gameId": "game12345",
  "userId": "userABC",
  "selectedTeam": "team1", // The team the user picked to win
  "wasCorrect": false, // This can be updated later when the game result is known
  "year": 2023,
  "week": 5
}

// Updating results
{
  "_id": "game12345",
  ...
  "result": "team1"
}

// Users collection (Only put data that requires user login here)
{
  "_id": "user001",
  "username": "johnDoe",
  "email": "john@example.com",
  "stats": {
    "totalPicks": 100,
    "correctPicks": 65,
    "winPercentage": 65.0
  }
}

// computedUsers collection
{
    "userId": "uniqueUserId",
    "stats": {
        "byYear": {
            "2023": {
                "regularSeason": {
                    "wins": 10,
                    "losses": 5,
                    // ... any other regular season stats
                },
                "playoffs": {
                    "wins": 2,
                    "losses": 1,
                    // ... any other playoff stats
                },
                "combined": {
                    "wins": 12,
                    "losses": 6,
                    // ... combined stats
                }
            },
            // ... other years
        },
        "allTime": {
            "regularSeason": {
                "wins": 50,
                "losses": 25,
                // ... all-time regular season stats
            },
            "playoffs": {
                "wins": 10,
                "losses": 5,
                // ... all-time playoff stats
            },
            "combined": {
                "wins": 60,
                "losses": 30,
                // ... all-time combined stats
            }
        }
    }
}
